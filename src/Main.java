import java.util.ArrayList;
import java.util.List;

public class WorkManager {

    private final List<AudioVisualMedia> mediaLibrary; // Lista para armazenar objetos de m√≠dia (ex: Filmes)
    private final List<Review> reviews; // Lista de avalia√ß√µes (reviews)

    // Construtor
    public WorkManager() {
        this.mediaLibrary = new ArrayList<>();
        this.reviews = new ArrayList<>();
    }

    // Adiciona um item de m√≠dia √† biblioteca
    public void addMedia(AudioVisualMedia media) {
     mediaLibrary.add(media);
        System.out.println("üìö M√≠dia adicionada: " + media.getOriginalTitle());
    }

    // Lista todas as m√≠dias armazenadas
    public void listMediaLibrary() {
        if (mediaLibrary.isEmpty()) {
            System.out.println("A biblioteca de m√≠dia est√° vazia.");
            return;
        }
        System.out.println("üìã M√≠dias dispon√≠veis na biblioteca:");
        for (AudioVisualMedia media : mediaLibrary) {
            System.out.println("-> " + media.getOriginalTitle());
        }
    }

    // Adiciona uma avalia√ß√£o (Review) √† lista, verificando restri√ß√µes
    public void addReview(String comment, boolean status, float stars, String reviewDate) {
        try {
            Review review = new Review(comment, status, stars, reviewDate);
            reviews.add(review);
            System.out.println("üìù Review adicionada: " + review.getComment());
        } catch (IllegalArgumentException e) {
            System.out.println("‚ùå N√£o foi poss√≠vel adicionar a review: " + e.getMessage());
        }
    }

    // Lista todas as avalia√ß√µes dispon√≠veis
    public void listReviews() {
        if (reviews.isEmpty()) {
            System.out.println("Nenhuma review dispon√≠vel ainda.");
            return;
        }
        System.out.println("üìã Reviews realizadas:");
        for (Review review : reviews) {
            System.out.println("-> " + review.toString());
        }
    }

    // Associa uma Review a uma m√≠dia espec√≠fica
    public void addReviewToMedia(String mediaTitle, Review review) {
        for (AudioVisualMedia media : mediaLibrary) {
            if (media.getOriginalTitle().equals(mediaTitle)) {
                System.out.println("üìå Associando review ao t√≠tulo: " + mediaTitle);
                // Aqui voc√™ pode implementar um mecanismo na classe AudioVisualMedia para armazenar as avalia√ß√µes
                System.out.println("Review adicionada: " + review);
                return;
            }
        }
        System.out.println("‚ùå M√≠dia n√£o encontrada: " + mediaTitle);
    }

    // Busca uma m√≠dia por t√≠tulo
    public AudioVisualMedia findMediaByTitle(String title) {
        for (AudioVisualMedia media : mediaLibrary) {
            if (media.getOriginalTitle().equalsIgnoreCase(title)) {
                return media;
            }
        }
        return null;
    }

}